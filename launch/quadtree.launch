<?xml version="1.0"?>
<launch>

  <!-- Whether to launch the topside nodes -->
  <arg name="run_topside" default="false"/>

  <!-- namespace prepended to republished messages to avoid collisions with the original -->
  <arg name="republication_prefix" value="/republished"/>

  <!-- Where the quadtree receiver will put the received grids -->
  <arg name="quadtree_rx_grid_directory" default="$(find quadtree)/rx_grids"/>

  <arg name="quadtree_map_frame" value="/odom"/>

  <!-- Used for sending pre-staged maps (as a way to test quadtree without sensor bagfiles -->
  <!-- <arg name="quadtree_input_grid_filename" value="/home/llindzey/Documents/NOAAcoexploration/multibeam/sentry546/sentry536_20190930_0357_rnv_tide_1.00x1.00_BV02.grd"/> -->
  <arg name="quadtree_use_prestaged_map" default="false"/>

  <!-- The quadtree is capable of handling either PointCloud or MultibeamRaw messages.
       There isn't a switch to enable/disable on a per-topic basis; instead, this assumes
       that when replaying bagfiles only one of the two data types / topics will be valid. -->
  <!-- Topic for building a map based on sensor_msgs/PointCloud2 messages -->
  <arg name="multibeam_pointcloud_topic" value="/nui/perception/sensors/norbit/points"/>
  <!-- Topic for building a map based on ds_multibeam_msgs/Multibeamraw messages -->
  <!-- (This default works for Sentry data from 2019-engineering) -->
  <!-- <arg name="multibeam_raw_topic" value="/sentry/sonars/kongsberg/mbraw"/> -->

  <group if="$(arg run_topside)">
    <node name="map_receiver" pkg="quadtree" type="quadtree_receiver" output="screen">
      <remap from="~/metadata" to="/republished/nui/coexploration/quadtree/metadata"/>
      <remap from="~/subgrids" to="/republished/nui/coexploration/quadtree/sender/tx_data"/>
      <remap from="~/saved_grids" to="/topside/coexploration/quadtree/saved_grids"/>
      <remap from="~/requested_region" to="/topside/coexploration/quadtree/requested_regions"/>
      <remap from="~/data_request" to="/topside/coexploration/quadtree/receiver/data_request"/>
      <param name="grid_directory" value="$(arg quadtree_rx_grid_directory)"/>
    </node>

    <node name="map_gui" pkg="quadtree" type="grid_gui.py" output="screen">
      <remap from="~/requested_region" to="/topside/coexploration/quadtree/requested_regions"/>
      <remap from="~/update_grids" to="/topside/coexploration/quadtree/saved_grids"/>
      <remap from="~/metadata" to="/republished/nui/coexploration/quadtree/metadata"/>
      <param name="grid_directory" value="$(arg quadtree_rx_grid_directory)"/>
    </node>
  </group>  <!-- run_topside group -->

  <group unless="$(arg run_topside)">
    <node name="map_sender" pkg="quadtree" type="quadtree_sender" output="screen">
      <remap from="~/metadata" to="/nui/coexploration/quadtree/metadata"/>
      <remap from="~/data_request" to="/nui/coexploration/quadtree/sender/data_request"/>
      <remap from="~/incoming_data" to="/republished/topside/coexploration/quadtree/receiver/tx_data"/>
      <remap from="~/pointcloud" to="$(arg multibeam_pointcloud_topic)"/>
      <!-- <remap from="~/multibeam_raw" to="$(arg multibeam_raw_topic)"/> -->
      <rosparam command="load" file="$(find nui_coex_auv_2022)/config/quadtree.yaml"/>
      <param name="map_frame" value="$(arg quadtree_map_frame)"/>
      <param name="use_prestaged_map" type="bool" value="$(arg quadtree_use_prestaged_map)"/>
      <!-- <param name="grid_filename" value="$(arg quadtree_input_grid_filename)"/> -->
    </node>
  </group>  <!-- end run_subsea -->

</launch>